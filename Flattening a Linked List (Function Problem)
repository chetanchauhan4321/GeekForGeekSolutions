http://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1

/*
Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function would be added by GfG's Online Judge.*/


/* Node structure  used in the program
struct Node{
	int data;
	struct Node * next;
	struct Node * bottom ;
}; */
/*  Function which returns the  root of 
    the flattened linked list. */

void getList(Node *root,vector<int>&a)
{
    
    if(root)
    {
        getList(root->bottom,a);
        a.push_back(root->data);
        getList(root->next,a);
       }
    
}
Node* newNode(int x)
{
    struct Node* nn=new Node();
    nn->data=x;
    nn->next=NULL;
    nn->bottom=NULL;
    return nn;
}
Node *flatten(Node *root)
{
   // Your code here
   vector<int>a;
  getList(root,a);
  root=NULL;
  sort(a.begin(),a.end());
  for(int i=0;i<a.size();i++)
  {
      
      if(root==NULL)root=newNode(a[i]);
      else{
          struct Node* temp;
          temp=root;
          while(temp->bottom)
          {
              temp=temp->bottom;
          }
          temp->bottom=newNode(a[i]);
      }
  }
  return root;
}
