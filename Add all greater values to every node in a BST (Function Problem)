http://practice.geeksforgeeks.org/problems/add-all-greater-values-to-every-node-in-a-bst/1

/*
Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function would be added by GfG's Online Judge.*/


/* BST Node structure  used in the program
 struct Node
 {
     int data;
     Node* left, *right;
}; */
/*  modifies the root of the bst */
void inorder(Node *root,vector<int>&a)
{
    if(root)
    {
        inorder(root->left,a);
        a.push_back(root->data);
        inorder(root->right,a);
    }
}
void modifyUtil(Node *root,vector<int>a,int &i)
{
    if(root)
    {
        modifyUtil(root->left,a,i);
        root->data=a[i];
        i++;
        modifyUtil(root->right,a,i);
    }
}
void printInorder(Node *root)
{
    if(root)
    {
        printInorder(root->left);
        cout<<root->data<<" ";
        printInorder(root->right);
    }
}
void modify(Node **root)
{
vector<int>a;
inorder(*root,a);
int sum=0;
for(int i=0;i<a.size();i++)sum=sum+a[i];

vector<int>b(a.size());
b[0]=sum;
int revSum=0;
for(int i=1;i<a.size();i++)
{ revSum=revSum+a[i-1];
 b[i]=sum-revSum;
}
int i=0;
modifyUtil(*root,b,i);
}
