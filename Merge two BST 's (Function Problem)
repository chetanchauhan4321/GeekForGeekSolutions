http://practice.geeksforgeeks.org/problems/merge-two-bst-s/1
/*
Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function would be added by GfG's Online Judge.*/


/* The structure of Node is
struct Node {
int data;
Node * right, * left;
};*/
/*You are required to complete below method */
/*Node *m(Node *root1,Node* root2)
{
     if(root2)
   {
       m(root1,root2->left);
       Node * nn=new Node();
       nn->left=NULL;
       nn->right=NULL;
       nn->data=root2->data;
       if(root1==NULL)root1=nn;
       else if(root2->data<root1->data)
       {
           root1->left=m(root1->left,root2);
       }
       else if(root2->data>root1->data)
       {
           root1->right=m(root1->right,root2);
       }
       m(root1,root2->right);
   }
}
void in(Node* root)
{
    if(root)
    {
        in(root->left);
        cout<<root->data<<" ";
        in(root->right);
    }
}*/
void in(Node *root,   priority_queue<int,vector<int>,greater<int>>&pq)
{
    if(root)
    {
        in(root->left,pq);
        pq.push(root->data);
        in(root->right,pq);
    }
}
void merge(Node *root1, Node *root2)
{
   //Your code here
  //root1=m(root1,root2);
   //in(root1);
   priority_queue<int,vector<int>,greater<int>>pq;
   in(root1,pq);
   in(root2,pq);
   while(!pq.empty())
   {
       cout<<pq.top()<<" ";
       pq.pop();
   }
  
}
