http://practice.geeksforgeeks.org/problems/segregate-even-and-odd-nodes-in-a-linked-list/0

#include <bits/stdc++.h>
using namespace std;
struct node{
    int data;
    node *next;
    
}*head=NULL,*head1;

void insert(int x)
{
    struct node* nn=new node();
    nn->data=x;
    nn->next=NULL;
    if(head==NULL)
    {
        head=nn;
    }
    else{
    struct node *temp;
    temp=head;
    while(temp->next)
    {
        temp=temp->next;
    }
    temp->next=nn;
    }
}
int main() {
	//code
	int t;
	cin>>t;
	for(int z=0;z<t;z++)
	{
	    int n;
	    cin>>n;
	 
	    for(int i=0;i<n;i++)
	    {
	        int x;
	        cin>>x;
	        insert(x);
	        
	    }
	    struct node *temp;
	    temp=head;
	    vector<int>even;
	    vector<int>odd;
	    while(temp)
	    {   if(temp->data%2==0)even.push_back(temp->data);
	        else odd.push_back(temp->data);
	        temp=temp->next;
	    }
	    head=NULL;
	    int c=0;
	    while(c<even.size()){insert(even[c]);
	    c++;
	        
	    }
	    c=0;
	    while(c<odd.size()){
	        insert(odd[c]);
	        c++;
	    }
	    temp=head;
	    while(temp)
	    {  cout<<temp->data<<" ";
	        temp=temp->next;
	    }
	    head=NULL;
	    cout<<endl;
	}
	return 0;
}
